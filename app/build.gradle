apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

String readCommitHash() {
    def givenVersionName = '1.0.0'
    def suffix = ''

    def gitExists = exec {
        commandLine 'which', 'git'
        ignoreExitValue true
    }

    if (gitExists.getExitValue() == 0) {
        def so = new ByteArrayOutputStream()
        def gitTagResult = exec {
            executable 'git'
            args 'describe', '--tags', 'HEAD'
            ignoreExitValue true
            standardOutput = so
        }
        if (gitTagResult.exitValue == 0) {
            givenVersionName = so.toString().trim()
        }
        else {
            def so2 = new ByteArrayOutputStream()
            def gitRevParseResult = exec {
                executable 'git'
                args 'rev-parse', '--short', 'HEAD'
                ignoreExitValue true
                standardOutput = so2
            }

            if (gitRevParseResult.exitValue == 0) {
                suffix = '.' + so2.toString().trim()
            }
        }
    }

    return givenVersionName + suffix
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "sword.notes.android"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName readCommitHash()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        release {
            // It is expected to find keystore.jks and keystore.properties
            // in the project root in order to generate the signed APK for release
            // They are explicitly excluded from the repository for security reasons.
            storeFile rootProject.file('keystore.jks')

            def keystorePropertiesFile = rootProject.file("keystore.properties")
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
